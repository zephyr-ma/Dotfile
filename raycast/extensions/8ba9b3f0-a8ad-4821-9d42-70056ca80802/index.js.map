{
  "version": 3,
  "sources": ["../src/index.tsx", "../src/characters.ts"],
  "sourcesContent": ["import { ActionPanel, Action, List, Icon, Detail } from \"@raycast/api\";\nimport { Character, characterSections } from \"./characters\";\n\nconst DEBUG = false;\n\n/**\n * Form the Details view of a selected character\n */\nfunction getDetailMarkdown(char: Character) {\n  let detail = `# ${char.value}\\n---\\n## ${char.label}`;\n\n  if (char.example) {\n    detail += `\\n> Example: ${char.example}`;\n  }\n\n  return detail;\n}\n\n/**\n * Combine different properties to support fuzzy search\n */\nfunction getKeywords(char: Character) {\n  const definedKeywords = char.keywords ?? [];\n\n  const keywords = [\n    char.value,\n    char.html.replace(/&|;/g, \"\"),\n    ...char.label.split(/\\s/),\n    ...definedKeywords,\n  ];\n\n  return keywords;\n}\n\nexport default function Command() {\n  if (DEBUG) return <Debug />;\n\n  return (\n    <List isShowingDetail>\n      {characterSections.map((section) => (\n        <List.Section title={section.title} key={section.title}>\n          {section.characters.map((char) => (\n            <List.Item\n              key={char.label}\n              title={char.icons ? char.label : char.value}\n              subtitle={char.icons ? undefined : char.label}\n              icon={char.icons ? { source: char.icons } : undefined}\n              keywords={getKeywords(char)}\n              detail={\n                <List.Item.Detail\n                  markdown={getDetailMarkdown(char)}\n                  metadata={\n                    <List.Item.Detail.Metadata>\n                      <List.Item.Detail.Metadata.Label\n                        title=\"HTML\"\n                        text={char.html}\n                      />\n                    </List.Item.Detail.Metadata>\n                  }\n                />\n              }\n              actions={\n                <ActionPanel>\n                  <Action.CopyToClipboard content={char.value} />\n                  <Action.Paste content={char.value} />\n                  {char.html && (\n                    <Action.CopyToClipboard\n                      title=\"Copy HTML\"\n                      content={char.html}\n                      icon={Icon.Code}\n                      shortcut={{ modifiers: [\"cmd\", \"opt\"], key: \"c\" }}\n                    />\n                  )}\n                </ActionPanel>\n              }\n            />\n          ))}\n        </List.Section>\n      ))}\n    </List>\n  );\n}\n\n/**\n * Debug whether the content (some of which is AI-generated) looks correct\n */\nfunction Debug() {\n  const entities = characterSections\n    .reduce((acc: Character[], section) => {\n      return [...acc, ...section.characters];\n    }, [])\n    .map((char) => char.html)\n    .join(\"\\n\");\n\n  return <Detail markdown={entities} />;\n}\n", "/**\n * Useful references:\n * - https://www.typewolf.com/cheatsheet\n * - https://www.w3.org/wiki/Common_HTML_entities_used_for_typography\n */\nexport interface Character {\n  label: string;\n  value: string;\n  html: string;\n  example?: string;\n  keywords?: string[];\n  icons?: {\n    light: string;\n    dark: string;\n  };\n}\n\nconst quoteChars: Character[] = [\n  {\n    label: \"Opening Double Quote\",\n    value: \"\u201C\",\n    keywords: [\"Left\"],\n    example: \"\u201CTo be or not to be.\u201D\",\n    html: \"&ldquo;\",\n    icons: {\n      light: \"opening-double-black.png\",\n      dark: \"opening-double-white.png\",\n    },\n  },\n  {\n    label: \"Closing Double Quote\",\n    value: \"\u201D\",\n    keywords: [\"Right\"],\n    example: \"\u201CTo be or not to be.\u201D\",\n    html: \"&rdquo;\",\n    icons: {\n      light: \"closing-double-black.png\",\n      dark: \"closing-double-white.png\",\n    },\n  },\n  {\n    label: \"Opening Single Quote\",\n    value: \"\u2018\",\n    keywords: [\"Left\"],\n    example: \"\u2018Tis but a scratch.\",\n    html: \"&lsquo;\",\n    icons: {\n      light: \"opening-single-black.png\",\n      dark: \"opening-single-white.png\",\n    },\n  },\n  {\n    label: \"Closing Single Quote\",\n    value: \"\u2019\",\n    keywords: [\"Apostrophe\", \"Right\"],\n    example: \"It\u2019s a great day.\",\n    html: \"&rsquo;\",\n    icons: {\n      light: \"closing-single-black.png\",\n      dark: \"closing-single-white.png\",\n    },\n  },\n];\n\nconst punctuationChars: Character[] = [\n  {\n    label: \"Em Dash\",\n    value: \"\u2014\",\n    example: \"The quick brown fox \u2014 not the lazy dog \u2014 jumped over the fence.\",\n    html: \"&mdash;\",\n    keywords: [\"Long\"],\n  },\n  {\n    label: \"En Dash\",\n    value: \"\u2013\",\n    example: \"New York\u2013London at 3pm\u20134pm.\",\n    html: \"&ndash;\",\n  },\n  {\n    label: \"Figure Dash\",\n    value: \"\u2012\",\n    keywords: [\"Number\", \"Dash\"],\n    example: \"(555) 123\u20124567\",\n    html: \"&#8210;\",\n  },\n  {\n    label: \"Minus\",\n    value: \"\u2212\",\n    keywords: [\"Minus\"],\n    example: \"5 \u2212 3 = 2\",\n    html: \"&minus;\",\n  },\n  {\n    label: \"Ellipsis\",\n    value: \"\u2026\",\n    keywords: [\"dot\", \"..\"],\n    example: \"Wait for it\u2026\",\n    html: \"&hellip;\",\n  },\n  {\n    label: \"Vertical ellipsis\",\n    value: \"\uFE19\",\n    keywords: [\"dot\", \"..\"],\n    example: \"Menu\uFE19\",\n    html: \"&#x22ee;\",\n  },\n  {\n    label: \"Non-breaking space\",\n    value: \"\u00A0\",\n    html: \"&nbsp;\",\n  },\n];\n\nconst mathAndNumberChars: Character[] = [\n  {\n    label: \"Plus/Minus\",\n    value: \"\u00B1\",\n    example: \"\u00B1 5\",\n    html: \"&plusmn;\",\n  },\n  {\n    label: \"Multiplication\",\n    value: \"\u00D7\",\n    keywords: [\"Multiply\", \"Times\"],\n    example: \"3 \u00D7 4 = 12\",\n    html: \"&times;\",\n  },\n  {\n    label: \"Division\",\n    value: \"\u00F7\",\n    keywords: [\"Divide\"],\n    example: \"12 \u00F7 4 = 3\",\n    html: \"&divide;\",\n  },\n  {\n    label: \"Less Than or Equal To\",\n    value: \"\u2264\",\n    example: \"x \u2264 10\",\n    html: \"&le;\",\n  },\n  {\n    label: \"Greater Than or Equal To\",\n    value: \"\u2265\",\n    example: \"x \u2265 5\",\n    html: \"&ge;\",\n  },\n  { label: \"Not Equal To\", value: \"\u2260\", example: \"5 \u2260 6\", html: \"&ne;\" },\n  {\n    label: \"Approximately\",\n    value: \"\u2248\",\n    keywords: [\"almost\"],\n    example: \"\u03C0 \u2248 3.14\",\n    html: \"&asymp;\",\n  },\n  {\n    label: \"Degree\",\n    value: \"\u00B0\",\n    keywords: [\"temperature\", \"angle\"],\n    example: \"90\u00B0 angle\",\n    html: \"&deg;\",\n  },\n  {\n    label: \"Degree fahrenheit\",\n    value: \"\u2109\",\n    keywords: [\"temperature\"],\n    example: \"90\u2109\",\n    html: \"&#8457;\",\n  },\n  {\n    label: \"Degree celsius\",\n    value: \"\u2103\",\n    keywords: [\"temperature\"],\n    example: \"32\u2103\",\n    html: \"&#8451;\",\n  },\n  {\n    label: \"Numero\",\n    value: \"\u2116\",\n    keywords: [\"number\"],\n    example: \"\u2116 1\",\n    html: \"&numero;\",\n  },\n  { label: \"Cents\", value: \"\u00A2\", example: \"99\u00A2\", html: \"&cent;\" },\n  {\n    label: \"Half\",\n    value: \"\u00BD\",\n    keywords: [\"1/2\"],\n    example: \"\u00BD cup of sugar\",\n    html: \"&frac12;\",\n  },\n  {\n    label: \"Third\",\n    value: \"\u2153\",\n    keywords: [\"1/3\"],\n    example: \"\u2153 of the pie\",\n    html: \"&frac13;\",\n  },\n  {\n    label: \"Two thirds\",\n    value: \"\u2154\",\n    keywords: [\"2/3\"],\n    example: \"\u2154 of the pie\",\n    html: \"&frac23;\",\n  },\n  {\n    label: \"Quarter\",\n    value: \"\u00BC\",\n    keywords: [\"1/4\"],\n    example: \"\u00BC cup of milk\",\n    html: \"&frac14;\",\n  },\n  {\n    label: \"Three quarters\",\n    value: \"\u00BE\",\n    keywords: [\"3/4\"],\n    example: \"\u00BE of the pizza\",\n    html: \"&frac34;\",\n  },\n  {\n    label: \"Prime\",\n    value: \"\u2032\",\n    keywords: [\"Feet\", \"Minutes\"],\n    example: \"The room measures 12\u2032 \u00D7 15\u2032\",\n    html: \"&prime;\",\n  },\n  {\n    label: \"Double Prime\",\n    value: \"\u2033\",\n    keywords: [\"Inches\", \"Seconds\"],\n    example: \"The screen is 24\u2033 wide\",\n    html: \"&Prime;\",\n  },\n];\n\nconst superscriptChars: Character[] = [\n  {\n    label: \"Superscript 1\",\n    value: \"\u00B9\",\n    example: \"x\u00B9\",\n    html: \"&sup1;\",\n  },\n  {\n    label: \"Superscript 2\",\n    value: \"\u00B2\",\n    example: \"x\u00B2\",\n    html: \"&sup2;\",\n  },\n  {\n    label: \"Superscript 3\",\n    value: \"\u00B3\",\n    example: \"x\u00B3\",\n    html: \"&sup3;\",\n  },\n  {\n    label: \"Superscript 4\",\n    value: \"\u2074\",\n    example: \"x\u2074\",\n    html: \"&#8308;\",\n  },\n  {\n    label: \"Superscript 5\",\n    value: \"\u2075\",\n    example: \"x\u2075\",\n    html: \"&#8309;\",\n  },\n  {\n    label: \"Superscript 6\",\n    value: \"\u2076\",\n    example: \"x\u2076\",\n    html: \"&#8310;\",\n  },\n  {\n    label: \"Superscript 7\",\n    value: \"\u2077\",\n    example: \"x\u2077\",\n    html: \"&#8311;\",\n  },\n  {\n    label: \"Superscript 8\",\n    value: \"\u2078\",\n    example: \"x\u2078\",\n    html: \"&#8312;\",\n  },\n  {\n    label: \"Superscript 9\",\n    value: \"\u2079\",\n    example: \"x\u2079\",\n    html: \"&#8313;\",\n  },\n  {\n    label: \"Superscript 0\",\n    value: \"\u2070\",\n    example: \"x\u2070\",\n    html: \"&#8304;\",\n  },\n];\n\nconst symbolChars: Character[] = [\n  {\n    label: \"Section\",\n    value: \"\u00A7\",\n    example: \"See 29 USC \u00A7 794 (d)\",\n    html: \"&sect;\",\n  },\n  {\n    label: \"Dagger\",\n    value: \"\u2020\",\n    keywords: [\"cross\", \"footnote\"],\n    example: \"This is a footnote\u2020\",\n    html: \"&dagger;\",\n  },\n  {\n    label: \"Double dagger\",\n    value: \"\u2021\",\n    keywords: [\"cross\", \"footnote\"],\n    example: \"This is another footnote\u2021\",\n    html: \"&Dagger;\",\n  },\n  {\n    label: \"Ampersand\",\n    value: \"&\",\n    keywords: [\"and\"],\n    example: \"Acme & Co\",\n    html: \"&amp;\",\n  },\n  {\n    label: \"Registered\",\n    value: \"\u00AE\",\n    keywords: [\"R\", \"Trademark\"],\n    example: \"Acme\u00AE\",\n    html: \"&reg;\",\n  },\n  { label: \"Copyright\", value: \"\u00A9\", example: \"\u00A9 2023 Acme\", html: \"&copy;\" },\n  {\n    label: \"Trademark\",\n    value: \"\u2122\",\n    keywords: [\"tm\"],\n    example: \"Acme\u2122\",\n    html: \"&trade;\",\n  },\n];\n\nconst miscChars: Character[] = [\n  {\n    label: \"Left arrow\",\n    value: \"\u2190\",\n    example: \"Swipe \u2190 to go back\",\n    html: \"&larr;\",\n  },\n  {\n    label: \"Right arrow\",\n    value: \"\u2192\",\n    example: \"Swipe \u2192 to go forward\",\n    html: \"&rarr;\",\n  },\n  {\n    label: \"Up arrow\",\n    value: \"\u2191\",\n    example: \"Press \u2191 to scroll up\",\n    html: \"&uarr;\",\n  },\n  {\n    label: \"Down arrow\",\n    value: \"\u2193\",\n    example: \"Press \u2193 to scroll down\",\n    html: \"&darr;\",\n  },\n  {\n    label: \"Upper left arrow\",\n    value: \"\u2196\",\n    example: \"Swipe \u2196 to access menu\",\n    html: \"&nwarr;\",\n  },\n  {\n    label: \"Upper right arrow\",\n    value: \"\u2197\",\n    example: \"Swipe \u2197 to expand options\",\n    html: \"&nearr;\",\n  },\n  {\n    label: \"Lower left arrow\",\n    value: \"\u2199\",\n    example: \"Swipe \u2199 to minimize options\",\n    html: \"&swarr;\",\n  },\n  {\n    label: \"Lower right arrow\",\n    value: \"\u2198\",\n    example: \"Swipe \u2198 to access settings\",\n    html: \"&searr;\",\n  },\n  {\n    label: \"Wavy dash\",\n    value: \"\u3030\",\n    keywords: [\"wave\", \"squiggle\"],\n    html: \"&#x3030;\",\n  },\n];\n\nexport const characterSections: Array<{\n  title: string;\n  characters: Character[];\n}> = [\n  {\n    title: \"Quotes\",\n    characters: quoteChars,\n  },\n  {\n    title: \"Punctuation\",\n    characters: punctuationChars,\n  },\n  {\n    title: \"Math and Numbers\",\n    characters: mathAndNumberChars,\n  },\n  {\n    title: \"Superscript\",\n    characters: superscriptChars,\n  },\n  {\n    title: \"Symbols\",\n    characters: symbolChars,\n  },\n  {\n    title: \"Miscellaneous\",\n    characters: miscChars,\n  },\n];\n"],
  "mappings": "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,CACE,MAAO,gBACP,MAAO,OACP,QAAS,QACT,KAAM,QACR,EACA,CACE,MAAO,gBACP,MAAO,OACP,QAAS,QACT,KAAM,QACR,EACA,CACE,MAAO,gBACP,MAAO,SACP,QAAS,UACT,KAAM,SACR,EACA,CACE,MAAO,gBACP,MAAO,SACP,QAAS,UACT,KAAM,SACR,EACA,CACE,MAAO,gBACP,MAAO,SACP,QAAS,UACT,KAAM,SACR,EACA,CACE,MAAO,gBACP,MAAO,SACP,QAAS,UACT,KAAM,SACR,EACA,CACE,MAAO,gBACP,MAAO,SACP,QAAS,UACT,KAAM,SACR,EACA,CACE,MAAO,gBACP,MAAO,SACP,QAAS,UACT,KAAM,SACR,EACA,CACE,MAAO,gBACP,MAAO,SACP,QAAS,UACT,KAAM,SACR,CACF,EAEMC,EAA2B,CAC/B,CACE,MAAO,UACP,MAAO,OACP,QAAS,0BACT,KAAM,QACR,EACA,CACE,MAAO,SACP,MAAO,SACP,SAAU,CAAC,QAAS,UAAU,EAC9B,QAAS,2BACT,KAAM,UACR,EACA,CACE,MAAO,gBACP,MAAO,SACP,SAAU,CAAC,QAAS,UAAU,EAC9B,QAAS,iCACT,KAAM,UACR,EACA,CACE,MAAO,YACP,MAAO,IACP,SAAU,CAAC,KAAK,EAChB,QAAS,YACT,KAAM,OACR,EACA,CACE,MAAO,aACP,MAAO,OACP,SAAU,CAAC,IAAK,WAAW,EAC3B,QAAS,WACT,KAAM,OACR,EACA,CAAE,MAAO,YAAa,MAAO,OAAK,QAAS,iBAAe,KAAM,QAAS,EACzE,CACE,MAAO,YACP,MAAO,SACP,SAAU,CAAC,IAAI,EACf,QAAS,aACT,KAAM,SACR,CACF,EAEMC,EAAyB,CAC7B,CACE,MAAO,aACP,MAAO,SACP,QAAS,0BACT,KAAM,QACR,EACA,CACE,MAAO,cACP,MAAO,SACP,QAAS,6BACT,KAAM,QACR,EACA,CACE,MAAO,WACP,MAAO,SACP,QAAS,4BACT,KAAM,QACR,EACA,CACE,MAAO,aACP,MAAO,SACP,QAAS,8BACT,KAAM,QACR,EACA,CACE,MAAO,mBACP,MAAO,SACP,QAAS,8BACT,KAAM,SACR,EACA,CACE,MAAO,oBACP,MAAO,SACP,QAAS,iCACT,KAAM,SACR,EACA,CACE,MAAO,mBACP,MAAO,SACP,QAAS,mCACT,KAAM,SACR,EACA,CACE,MAAO,oBACP,MAAO,SACP,QAAS,kCACT,KAAM,SACR,EACA,CACE,MAAO,YACP,MAAO,SACP,SAAU,CAAC,OAAQ,UAAU,EAC7B,KAAM,UACR,CACF,EAEaC,EAGR,CACH,CACE,MAAO,SACP,WAAYN,CACd,EACA,CACE,MAAO,cACP,WAAYC,CACd,EACA,CACE,MAAO,mBACP,WAAYC,CACd,EACA,CACE,MAAO,cACP,WAAYC,CACd,EACA,CACE,MAAO,UACP,WAAYC,CACd,EACA,CACE,MAAO,gBACP,WAAYC,CACd,CACF,ED3aA,IAAAE,EAAA,6BAGMC,EAAQ,GAKd,SAASC,EAAkBC,EAAiB,CAC1C,IAAIC,EAAS,KAAKD,EAAK;AAAA;AAAA,KAAkBA,EAAK,QAE9C,OAAIA,EAAK,UACPC,GAAU;AAAA,aAAgBD,EAAK,WAG1BC,CACT,CAKA,SAASC,EAAYF,EAAiB,CACpC,IAAMG,EAAkBH,EAAK,UAAY,CAAC,EAS1C,MAPiB,CACfA,EAAK,MACLA,EAAK,KAAK,QAAQ,OAAQ,EAAE,EAC5B,GAAGA,EAAK,MAAM,MAAM,IAAI,EACxB,GAAGG,CACL,CAGF,CAEe,SAARC,GAA2B,CAChC,OAAIN,KAAc,OAACO,EAAA,EAAM,KAGvB,OAAC,QAAK,gBAAe,GAClB,SAAAC,EAAkB,IAAKC,MACtB,OAAC,OAAK,QAAL,CAAa,MAAOA,EAAQ,MAC1B,SAAAA,EAAQ,WAAW,IAAKP,MACvB,OAAC,OAAK,KAAL,CAEC,MAAOA,EAAK,MAAQA,EAAK,MAAQA,EAAK,MACtC,SAAUA,EAAK,MAAQ,OAAYA,EAAK,MACxC,KAAMA,EAAK,MAAQ,CAAE,OAAQA,EAAK,KAAM,EAAI,OAC5C,SAAUE,EAAYF,CAAI,EAC1B,UACE,OAAC,OAAK,KAAK,OAAV,CACC,SAAUD,EAAkBC,CAAI,EAChC,YACE,OAAC,OAAK,KAAK,OAAO,SAAjB,CACC,mBAAC,OAAK,KAAK,OAAO,SAAS,MAA1B,CACC,MAAM,OACN,KAAMA,EAAK,KACb,EACF,EAEJ,EAEF,WACE,QAAC,eACC,oBAAC,SAAO,gBAAP,CAAuB,QAASA,EAAK,MAAO,KAC7C,OAAC,SAAO,MAAP,CAAa,QAASA,EAAK,MAAO,EAClCA,EAAK,SACJ,OAAC,SAAO,gBAAP,CACC,MAAM,YACN,QAASA,EAAK,KACd,KAAM,OAAK,KACX,SAAU,CAAE,UAAW,CAAC,MAAO,KAAK,EAAG,IAAK,GAAI,EAClD,GAEJ,GA9BGA,EAAK,KAgCZ,CACD,GApCsCO,EAAQ,KAqCjD,CACD,EACH,CAEJ,CAKA,SAASF,GAAQ,CACf,IAAMG,EAAWF,EACd,OAAO,CAACG,EAAkBF,IAClB,CAAC,GAAGE,EAAK,GAAGF,EAAQ,UAAU,EACpC,CAAC,CAAC,EACJ,IAAKP,GAASA,EAAK,IAAI,EACvB,KAAK;AAAA,CAAI,EAEZ,SAAO,OAAC,UAAO,SAAUQ,EAAU,CACrC",
  "names": ["src_exports", "__export", "Command", "__toCommonJS", "import_api", "quoteChars", "punctuationChars", "mathAndNumberChars", "superscriptChars", "symbolChars", "miscChars", "characterSections", "import_jsx_runtime", "DEBUG", "getDetailMarkdown", "char", "detail", "getKeywords", "definedKeywords", "Command", "Debug", "characterSections", "section", "entities", "acc"]
}
